{"version":3,"sources":["components/MapContainer.js","components/Navigation.js","APIs/Zomato.js","RestaurantApp.js","GMapsError.js","serviceWorker.js","index.js"],"names":["MapContainer","state","viewportBounds","clickedRestaurant","activeRestaurant","showingInfoWindow","center","url","address","cuisines","rating","costForTwo","setViewportBounds","_this","props","google","maps","LatLngBounds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","restaurants","Symbol","iterator","next","done","restaurant","value","extend","location","err","return","setState","onMarkerClick","marker","filter","name","title","this","centerCoords","_this2","react_default","a","createElement","className","dist","style","width","height","bounds","map","index","key","zomatoID","position","lat","lng","onClick","animation","Animation","BOUNCE","visible","zomatoAPICallsExceeded","href","Component","GoogleApiWrapper","apiKey","Navigation","sidebarOpen","onHamburgerClick","sidebar","document","querySelector","transform","role","aria-label","tabIndex","id","placeholder","type","onChange","changeEvent","onQuery","target","htmlFor","setActiveRestaurant","fetchZomatoData","headers","Headers","append","URL","concat","request","Request","method","fetch","catch","error","console","log","then","response","json","RestaurantApp","restaurantData","currentRestaurants","fetchZomatoInfo","fetchedRestaurants","ZomatoAPI","responseJSON","user_rating","aggregate_rating","average_cost_for_two","filterRestaurants","inputQuery","filteredRestaurants","toLowerCase","includes","click","components_Navigation","components_MapContainer","GMapsError","errMsg","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","gm_authFailure","ReactDOM","render","src_GMapsError","getElementById","src_RestaurantApp_0","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.63af1556.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nclass MapContainer extends Component {\n\tstate = {\n\t\tviewportBounds: {},\n\t\tclickedRestaurant: {},\n\t\tactiveRestaurant: {},\n\t\tshowingInfoWindow: true,\n\t\tcenter: {},\n\t\turl: '',\n\t\taddress: '',\n\t\tcuisines: '',\n\t\trating: '',\n\t\tcostForTwo: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setViewportBounds();\n\t\tthis.setState({ center: this.props.centerCoords.location });\n\t}\n\n\tsetViewportBounds = () => {\n\t\tconst viewportBounds = new this.props.google.maps.LatLngBounds();\n\t\tfor (let restaurant of this.props.restaurants) {\n\t\t\tviewportBounds.extend(restaurant.location);\n\t\t}\n\t\tthis.setState({ viewportBounds });\n\t};\n\n\tonMarkerClick = (props, marker) => {\n\t\tconst restaurant = this.props.restaurants.filter(\n\t\t\trestaurant => restaurant.name === props.title\n\t\t);\n\t\tthis.setState({\n\t\t\tshowingInfoWindow: true,\n\t\t\tactiveRestaurant: marker,\n\t\t\tclickedRestaurant: restaurant[0]\n\t\t});\n\t};\n\n\trender() {\n\t\tconst mapStyle = {\n\t\t\twidth: '100%',\n\t\t\theight: '100%'\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"Map\">\n\t\t\t\t<Map\n\t\t\t\t\tgoogle={this.props.google}\n\t\t\t\t\tstyle={mapStyle}\n\t\t\t\t\tcenter={this.state.center}\n\t\t\t\t\tbounds={this.state.viewportBounds}\n\t\t\t\t>\n\t\t\t\t\t{this.props.restaurants.map((restaurant, index) => (\n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tname={restaurant.name}\n\t\t\t\t\t\t\ttitle={restaurant.name}\n\t\t\t\t\t\t\tzomatoID={restaurant.zomatoID}\n\t\t\t\t\t\t\tposition={{\n\t\t\t\t\t\t\t\tlat: restaurant.location.lat,\n\t\t\t\t\t\t\t\tlng: restaurant.location.lng\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.onMarkerClick}\n\t\t\t\t\t\t\tanimation={\n\t\t\t\t\t\t\t\tthis.state.activeRestaurant.name ===\n\t\t\t\t\t\t\t\t\trestaurant.name &&\n\t\t\t\t\t\t\t\tthis.props.google.maps.Animation.BOUNCE\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\tmarker={this.state.activeRestaurant}\n\t\t\t\t\t\tvisible={this.state.showingInfoWindow}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!this.props.zomatoAPICallsExceeded ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h1>{this.state.clickedRestaurant.name}</h1>\n\t\t\t\t\t\t\t\t<h3>Exceeded Zomato API calls quota</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<a href={this.state.clickedRestaurant.url}>\n\t\t\t\t\t\t\t\t\t<h1>{this.state.clickedRestaurant.name}</h1>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<h2>{this.state.clickedRestaurant.address}</h2>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{this.state.clickedRestaurant.cuisines} |{' '}\n\t\t\t\t\t\t\t\t\t{this.state.clickedRestaurant.rating}★ |\n\t\t\t\t\t\t\t\t\tAbout ₹\n\t\t\t\t\t\t\t\t\t{this.state.clickedRestaurant.costForTwo}{' '}\n\t\t\t\t\t\t\t\t\tfor two\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</InfoWindow>\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: 'AIzaSyDgLyKemKHxzniLby6HA2MmL7LkXPFuIGg'\n})(MapContainer);\n","import React, { Component } from 'react';\n\nclass Navigation extends Component {\n\tstate = {\n\t\tsidebarOpen: false\n\t};\n\n\tonHamburgerClick = () => {\n\t\tconst sidebar = document.querySelector('.sidebar');\n\t\tif (this.state.sidebarOpen) {\n\t\t\tsidebar.style.transform = 'translateX(-250px)';\n\t\t\tthis.setState({ sidebarOpen: false });\n\t\t} else {\n\t\t\tsidebar.style.transform = 'translateX(0px)';\n\t\t\tthis.setState({ sidebarOpen: true });\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"navigation\" role=\"navigation\">\n\t\t\t\t<div className=\"navbar-container\">\n\t\t\t\t\t<nav className=\"navbar\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-label=\"Hamburger Menu\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tclassName=\"hamburger-container\"\n\t\t\t\t\t\t\tonClick={this.onHamburgerClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"hamburger-bar\" />\n\t\t\t\t\t\t\t<div className=\"hamburger-bar\" />\n\t\t\t\t\t\t\t<div className=\"hamburger-bar\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"navbar-title\">\n\t\t\t\t\t\t\t<h1>Neighborhood Restaurants Project</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"restaurant-input\"\n\t\t\t\t\t\t\tplaceholder=\"Enter restaurant name\"\n\t\t\t\t\t\t\taria-label=\"Search Filter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={changeEvent =>\n\t\t\t\t\t\t\t\tthis.props.onQuery(changeEvent.target.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"restaurant-input\">\n\t\t\t\t\t\t\tEnter restaurant name\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul className=\"restaurants\">\n\t\t\t\t\t\t{this.props.restaurants.map(restaurant => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\taria-label=\"Restaurant Location\"\n\t\t\t\t\t\t\t\t\tid={restaurant.zomatoID}\n\t\t\t\t\t\t\t\t\tkey={restaurant.zomatoID}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.props.setActiveRestaurant(\n\t\t\t\t\t\t\t\t\t\t\trestaurant.name\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{restaurant.name}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navigation;\n","export const fetchZomatoData = zomatoID => {\n\tconst zomatoKey = '35b8f8f1e89eded996602e47567a11c3';\n\tconst headers = new Headers();\n\theaders.append('user-key', zomatoKey);\n\n\tconst URL = `https://developers.zomato.com/api/v2.1/restaurant?res_id=${zomatoID}`;\n\n\tconst request = new Request(URL, { method: 'GET', headers: headers });\n\n\treturn fetch(request)\n\t\t.catch(error =>\n\t\t\tconsole.log(`Error ${error} Failed to fetch data from Zomato API`)\n\t\t)\n\t\t.then(response => response.json());\n};\n","import React, { Component } from 'react';\nimport './RestaurantApp.css';\nimport MapContainer from './components/MapContainer';\nimport Navigation from './components/Navigation';\nimport * as ZomatoAPI from './APIs/Zomato';\nimport restaurantData from './data/restaurant-info.json';\n\nclass RestaurantApp extends Component {\n\tstate = {\n\t\trestaurants: restaurantData.restaurants,\n\t\tcurrentRestaurants: [],\n\t\tzomatoAPICallsExceeded: true\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.fetchZomatoInfo();\n\t}\n\n\tfetchZomatoInfo = () => {\n\t\tconst fetchedRestaurants = this.state.restaurants.map(restaurant => {\n\t\t\tZomatoAPI.fetchZomatoData(restaurant.zomatoID)\n\t\t\t\t.then(responseJSON => {\n\t\t\t\t\trestaurant.url = responseJSON.url;\n\t\t\t\t\trestaurant.address = responseJSON.location.address;\n\t\t\t\t\trestaurant.cuisines = responseJSON.cuisines;\n\t\t\t\t\trestaurant.rating =\n\t\t\t\t\t\tresponseJSON.user_rating.aggregate_rating;\n\t\t\t\t\trestaurant.costForTwo = responseJSON.average_cost_for_two;\n\t\t\t\t})\n\t\t\t\t.catch(() => this.setState({ zomatoAPICallsExceeded: false }));\n\t\t\treturn restaurant;\n\t\t});\n\t\tthis.setState({ currentRestaurants: fetchedRestaurants });\n\t};\n\n\tfilterRestaurants = inputQuery => {\n\t\tif (!inputQuery) {\n\t\t\tthis.setState({ currentRestaurants: [] });\n\t\t}\n\t\tconst filteredRestaurants = this.state.restaurants.filter(restaurant =>\n\t\t\trestaurant.name.toLowerCase().includes(inputQuery.toLowerCase())\n\t\t);\n\t\tthis.setState({ currentRestaurants: filteredRestaurants });\n\t};\n\n\tsetActiveRestaurant = marker => {\n\t\tdocument.querySelector(`[title=\"${marker}\"]`).click();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation\n\t\t\t\t\trestaurants={this.state.currentRestaurants}\n\t\t\t\t\tonQuery={this.filterRestaurants}\n\t\t\t\t\tsetActiveRestaurant={this.setActiveRestaurant}\n\t\t\t\t/>\n\t\t\t\t<MapContainer\n\t\t\t\t\trestaurants={this.state.currentRestaurants}\n\t\t\t\t\tcenterCoords={this.state.restaurants[0].location}\n\t\t\t\t\tactiveRestaurant={this.state.activeRestaurant}\n\t\t\t\t\tshowingInfoWindow={this.state.showingInfoWindow}\n\t\t\t\t\tzomatoAPICallsExceeded={this.state.zomatoAPICallsExceeded}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RestaurantApp;\n","import React, { Component } from 'react';\nimport './RestaurantApp.css';\n\nclass GMapsError extends Component {\n\tstate = {\n\t\terrMsg:\n\t\t\t'Cannot load Google Maps API. Please check your API key or try again later.'\n\t};\n\n\trender() {\n\t\treturn <h1 className=\"gmaps-error-message\">{this.state.errMsg}</h1>;\n\t}\n}\n\nexport default GMapsError;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available; please refresh.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') ===\n\t\t\t\t\t-1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RestaurantApp from './RestaurantApp';\nimport GMapsError from './GMapsError';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.gm_authFailure = () => {\n\tReactDOM.render(<GMapsError />, document.getElementById('root'));\n};\n\nReactDOM.render(<RestaurantApp />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}